buildscript {
	repositories {
		jcenter()
		flatDir dirs: "libs"
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:2.2.2'
		classpath 'jp.leafytree.gradle:gradle-android-scala-plugin:1.5-SNAPSHOT'
	}
}

allprojects {
	repositories {
		jcenter()
	}
}

apply plugin: 'com.android.application'
apply plugin: 'jp.leafytree.android-scala'

android {
	compileSdkVersion 25
	buildToolsVersion '25'

	sourceSets.main {
		manifest.srcFile 'AndroidManifest.xml'
		java.srcDirs = ['src']
		scala.srcDirs = ['src']
		resources.srcDirs = ['src']
		aidl.srcDirs = ['src']
		renderscript.srcDirs = ['src']
		res.srcDirs = ['res']
		assets.srcDirs = ['assets']
	}

	if (new File('keystore.properties').exists()) {
		def Properties keystoreProperties = new Properties()
		keystoreProperties.load(new FileInputStream(file('keystore.properties')))

		signingConfigs {
			general {
				storeFile file(keystoreProperties['store.file'])
				storePassword keystoreProperties['store.password']
				keyAlias keystoreProperties['key.alias']
				keyPassword keystoreProperties['key.password']
			}
		}

		buildTypes.debug.signingConfig signingConfigs.general
		buildTypes.release.signingConfig signingConfigs.general
	}

	buildTypes {
		debug {
			minifyEnabled true
			proguardFiles 'proguard-rules.pro'
		}
		release {
			minifyEnabled true
			proguardFiles 'proguard-rules.pro'
		}
	}

	lintOptions {
		abortOnError false
		disable 'ValidFragment'
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
}

ScalaCompileOptions.metaClass {
	useAnt = false
	useCompileDaemon = true
}

tasks.withType(ScalaCompile) {
	scalaCompileOptions.additionalParameters = ['-feature', '-deprecation:false']
}

dependencies {
	compile 'org.scala-lang:scala-library:2.11.8'
	compile 'io.reactivex:rxscala_2.10:0.26.5'
	compile 'io.reactivex:rxandroid:1.2.1'
	compile 'com.squareup.okhttp:okhttp:2.7.5'
	compile 'com.squareup.picasso:picasso:2.5.2'
}
